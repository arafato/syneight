/*-----------------------------------------------------------------------------
 * Syneight - A soft-realtime transaction monitor.
 * Copyright (C) 2003-2004 The Syneight Group.
 *
 * TODO: License.
 *---------------------------------------------------------------------------*/

/**
 * @file TODO
 *
 * @author TODO
 * @author $Author: esdentem $
 *
 * @version $Id: memory_analysis.hpp 1053 2005-06-07 12:14:38Z esdentem $
 *
 * @brief TODO
 *
 * TODO: Long description.
 *
 * @note TODO
 *
 * @todo TODO
 */

#ifndef SYNEIGHT__ANNOTATION__BITS__MEMORY_ANALYSIS_HPP
#define SYNEIGHT__ANNOTATION__BITS__MEMORY_ANALYSIS_HPP

#include <syneight/base/annotation/base/memory_analysis.hpp>

////////////////////////////////////////////////////////////////////////////////

#if SYNEIGHT__SWITCH__BUILD_LEVEL == 2

#  define SYNEIGHT__AUD__MEMORY_ANALYSIS_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(AUD,false,false)
#  define SYNEIGHT__AUD__MEMORY_ANALYSIS_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__AUD__MEMORY_BALANCE_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(AUD,false,true)
#  define SYNEIGHT__AUD__MEMORY_BALANCE_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__AUD__MEMORY_LOGGING_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(AUD,true,false)
#  define SYNEIGHT__AUD__MEMORY_LOGGING_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__AUD__ASSERT_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(AUD)
#  define SYNEIGHT__AUD__LOG_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(AUD)

#else 


#  define SYNEIGHT__AUD__MEMORY_ANALYSIS_ENTER do { ((void)0)
#  define SYNEIGHT__AUD__MEMORY_ANALYSIS_EXIT  } while(false)
   
#  define SYNEIGHT__AUD__MEMORY_BALANCE_ENTER do { ((void)0)
#  define SYNEIGHT__AUD__MEMORY_BALANCE_EXIT  } while(false)
   
#  define SYNEIGHT__AUD__MEMORY_LOGGING_ENTER do { ((void)0)
#  define SYNEIGHT__AUD__MEMORY_LOGGING_EXIT  } while(false)
   
#  define SYNEIGHT__AUD__ASSERT_MEMORY_BALANCE ((void)0)
#  define SYNEIGHT__AUD__LOG_MEMORY_BALANCE    ((void)0)


#endif

////////////////////////////////////////////////////////////////////////////////

#if SYNEIGHT__SWITCH__BUILD_LEVEL > 0

#  define SYNEIGHT__DEB__MEMORY_ANALYSIS_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(DEB,false,false)
#  define SYNEIGHT__DEB__MEMORY_ANALYSIS_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__DEB__MEMORY_BALANCE_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(DEB,false,true)
#  define SYNEIGHT__DEB__MEMORY_BALANCE_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__DEB__MEMORY_LOGGING_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(DEB,true,false)
#  define SYNEIGHT__DEB__MEMORY_LOGGING_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__DEB__ASSERT_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(DEB)
#  define SYNEIGHT__DEB__LOG_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(DEB)

#else 


#  define SYNEIGHT__DEB__MEMORY_ANALYSIS_ENTER do { ((void)0)
#  define SYNEIGHT__DEB__MEMORY_ANALYSIS_EXIT  } while(false)
   
#  define SYNEIGHT__DEB__MEMORY_BALANCE_ENTER do { ((void)0)
#  define SYNEIGHT__DEB__MEMORY_BALANCE_EXIT  } while(false)
   
#  define SYNEIGHT__DEB__MEMORY_LOGGING_ENTER do { ((void)0)
#  define SYNEIGHT__DEB__MEMORY_LOGGING_EXIT  } while(false)
   
#  define SYNEIGHT__DEB__ASSERT_MEMORY_BALANCE ((void)0)
#  define SYNEIGHT__DEB__LOG_MEMORY_BALANCE    ((void)0)

#endif

////////////////////////////////////////////////////////////////////////////////

#if SYNEIGHT__SWITCH__BUILD_LEVEL > -1

#  define SYNEIGHT__PRO__MEMORY_ANALYSIS_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(PRO,false,false)
#  define SYNEIGHT__PRO__MEMORY_ANALYSIS_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__PRO__MEMORY_BALANCE_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(PRO,false,true)
#  define SYNEIGHT__PRO__MEMORY_BALANCE_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__PRO__MEMORY_LOGGING_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(PRO,true,false)
#  define SYNEIGHT__PRO__MEMORY_LOGGING_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__PRO__ASSERT_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(PRO)
#  define SYNEIGHT__PRO__LOG_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(PRO)

#else 

#  define SYNEIGHT__PRO__MEMORY_ANALYSIS_ENTER do { ((void)0)
#  define SYNEIGHT__PRO__MEMORY_ANALYSIS_EXIT  } while(false)
   
#  define SYNEIGHT__PRO__MEMORY_BALANCE_ENTER do { ((void)0)
#  define SYNEIGHT__PRO__MEMORY_BALANCE_EXIT  } while(false)
   
#  define SYNEIGHT__PRO__MEMORY_LOGGING_ENTER do { ((void)0)
#  define SYNEIGHT__PRO__MEMORY_LOGGING_EXIT  } while(false)
   
#  define SYNEIGHT__PRO__ASSERT_MEMORY_BALANCE ((void)0)
#  define SYNEIGHT__PRO__LOG_MEMORY_BALANCE    ((void)0)

#endif

////////////////////////////////////////////////////////////////////////////////

#if SYNEIGHT__SWITCH__TEST_ANNOTATIONS == 1

#  define SYNEIGHT__TES__MEMORY_ANALYSIS_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(TES,false,false)
#  define SYNEIGHT__TES__MEMORY_ANALYSIS_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__TES__MEMORY_BALANCE_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(TES,false,true)
#  define SYNEIGHT__TES__MEMORY_BALANCE_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__TES__MEMORY_LOGGING_ENTER SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_ENTER(TES,true,false)
#  define SYNEIGHT__TES__MEMORY_LOGGING_EXIT  SYNEIGHT__INTERNAL__MEMORY_ANALYSIS_EXIT
   
#  define SYNEIGHT__TES__ASSERT_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(TES)
#  define SYNEIGHT__TES__LOG_MEMORY_BALANCE SYNEIGHT__INTERNAL__ASSERT_MEMORY_BALANCE(TES)

#elif SYNEIGHT__SWITCH__TEST_ANNOTATIONS == 0

#  define SYNEIGHT__TES__MEMORY_ANALYSIS_ENTER do { ((void)0)
#  define SYNEIGHT__TES__MEMORY_ANALYSIS_EXIT  } while(false)
   
#  define SYNEIGHT__TES__MEMORY_BALANCE_ENTER do { ((void)0)
#  define SYNEIGHT__TES__MEMORY_BALANCE_EXIT  } while(false)
   
#  define SYNEIGHT__TES__MEMORY_LOGGING_ENTER do { ((void)0)
#  define SYNEIGHT__TES__MEMORY_LOGGING_EXIT  } while(false)
   
#  define SYNEIGHT__TES__ASSERT_MEMORY_BALANCE ((void)0)
#  define SYNEIGHT__TES__LOG_MEMORY_BALANCE    ((void)0)

#endif

#endif
// vim:ts=4:sw=4
